#+TITLE: Discussion Forum
* Table of Contents :toc:
- [[#introduction][Introduction]]
  - [[#what-is-django][What is django]]
  - [[#creating-a-django-project][Creating a django project]]
  - [[#creating-a-django-app][Creating a django app]]
  - [[#managepy][manage.py]]
  -  [[#to-start-the-project][to start the project]]
  - [[#projects-vs-apps][Projects vs. apps]]
- [[#about-the-project][About the Project]]
- [[#start-the-project][Start the project]]
- [[#everything-explained][Everything Explained]]
  - [[#dbfourm-directory][dbfourm directory:]]
  -  [[#discussion_forum-directory][Discussion_forum Directory]]
  - [[#static-directory][Static directory]]
  - [[#templates-directory][Templates directory]]
- [[#features-that-can-be-added][Features that can be added]]

* Introduction
** What is django
 - Django is an open-source web framework written in the Python programming language.
 - Django makes it easier to build better Web apps more quickly and with less code.
** Creating a django project
 - in the terminal, execute
   #+begin_src
   django-admin startproject mysite
   #+end_src

 - The structure will look something like this:
  #+begin_src
    mysite/
        manage.py
        mysite/
            __init__.py
            settings.py
            urls.py
            asgi.py
            wsgi.py
  #+end_src

** Creating a django app
 - in the terminal, using ~manage.py~ execute
    #+begin_src
    python manage.py startapp appname
    #+end_src
** manage.py
 -  A command line utility used to manage the server.
**  to start the project
    #+begin_src
    python3 manage.py runserver
    #+end_src
** Projects vs. apps
- An app is a Web application that does something â€“ e.g., a Weblog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.

* About the Project
  - In this project I have created a simple discussion forum using django, where the user can post Ideas, Views or Opinions of a topic
  - The user can click on =Create Post= to create a new post, and  they can add the their Name, Email, Topic, Description and link. *This form is completely generated by django*, so styling also becomes difficult, unless you use a module like crispy forums (which I have not used in this project).
  - Also in order to comment on a post, just click on =comment=, select which post you want to commnent on from the drop down menu, type the name and add your comment (under Discuss) *This form is also completely generated by django*

* Start the project
 - ~cd~ to the directory and start the server with ~python3 manage.py runserver~, then open http://127.0.0.1:8000/ in the browser

* Everything Explained
** dbfourm directory:
there are 2 directories with the name dbforum, one is the outer directory and other is the one inside it, like ~dbforum~ and ~dbfourm/dbfourm~
the name of the outer ~dbfourm~ directory does not matter to us, but the inner ~dbfourm~ is the project base.
this contains:
*** ~settings.py~
this file contains the setting for the project, and we need to edit this for our project to work properly

*** ~urls.py~
This file contains the urls to point to the views in the ~Discussion_fourm~ application

*** ~wsgi.py~
 - An entry-point for WSGI-compatible web servers to serve your project, no need to touch this file
   #+begin_quote
    WSGI is a specification that describes the communication between web servers and Python web applications or frameworks. It explains how a web server communicates with python web applications/frameworks and how web applications/frameworks can be chained for processing a request.
   #+end_quote

*** ~asgi.py~
 -  An entry-point for ASGI-compatible web servers to serve your project, no need to touch this file as well
   #+begin_quote
    ASGI (Asynchronous Server Gateway Interface) is a spiritual successor to WSGI, intended to provide a standard interface between async-capable Python web servers, frameworks, and applications.
   #+end_quote
**  Discussion_forum Directory
- this is the app created by ~python3 manage.py startapp Discussion_Forum~
*** ~admin.py~
 - this contains setting for the admin site
*** ~apps.py~
 - this contains the name of the app
*** ~forums.py~
 - this is what initializes the forms for the project
*** ~models.py~
 - This file has the models for the sql table
*** ~tests.py~
 - This is used for some test cases, no need to touch this
*** ~views.py~
- this tells how to view the forum

** Static directory
- this directory contains the static stuff, like css styles and the logo

** Templates directory
- this contains the actual webpages

* Features that can be added
- upvote/downvote
- markdown based entries
- Actual login based system
- proper way of navigation
